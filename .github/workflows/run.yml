# This is a basic workflow to help you get started with Actions

name: run

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run:
    runs-on: macos-11
      strategy:
        matrix: 
          image: [system-images;android-33;google_apis_playstore;x86_64]
          tools: [cmdline-tools/latest, tools]
          emulator: [emulator/emulator, tools/emulator]
          gpu: [host, guest]
          device: [Pixel_2_API_33]
  
    steps: 
    
      - name: sdkmanager --list
        env:
          TOOLS: ${{ matrix.tools }}
        run: |
          set -x
          $ANDROID_HOME/$TOOLS/bin/sdkmanager --list 
          
      - name: Download image
        env:
          TOOLS: ${{ matrix.tools }}
          IMAGE: ${{ matrix.image }}
        run: |
          set -x
          echo "y" | $ANDROID_HOME/$TOOLS/bin/sdkmanager --install $IMAGE
          
      - name: Apply licenses
        env:
          TOOLS: ${{ matrix.tools }}
        run: |
          set -x
          echo "y" | $ANDROID_HOME/$TOOLS/bin/sdkmanager --licenses
          
      - name: Create Android emulator
        env:
          TOOLS: ${{ matrix.tools }}
          IMAGE: ${{ matrix.image }}
          DEVICE: ${{ matrix.device }}
          EMULATOR: ${{ matrix.emulator }}
        run: |
          echo "no" | $ANDROID_HOME/$TOOLS/bin/avdmanager create avd -n $DEVICE -d pixel --package $IMAGE --force
          $ANDROID_HOME/$EMULATOR -list-avds
          
      - name: Set up virtualization
        run: |
          # non nessary if HAXM is not installed
          sysctl kern.hv_support
          echo 'HVF = on' >> ~/.android/advancedFeatures.ini
          cat ~/.android/advancedFeatures.ini
          
      - name: Start Android emulator gpu no
        env:
          TOOLS: ${{ matrix.tools }}
          IMAGE: ${{ matrix.image }}
          DEVICE: ${{ matrix.device }}
          EMULATOR: ${{ matrix.emulator }}
          GPU: ${{ matrix.gpu }}
        run: |
          echo "Starting emulator and waiting for boot to complete...."
          nohup $ANDROID_HOME/$EMULATOR -gpu $GPU -avd $DEVICE -no-snapshot -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do echo "wait..."; sleep 1; done; input keyevent 82'
          echo "Emulator has finished booting"
          $ANDROID_HOME/platform-tools/adb devices
          sleep 45
          screencapture screenshot-gpu-no.jpg
          $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator-gpu-no.png
          
      - uses: actions/upload-artifact@v3
        with:
          name: screenshot-gpu-no.jpg
          path: screenshot-gpu-no.jpg
          
      - uses: actions/upload-artifact@v3
        with:
          name: emulator-gpu-host.png
          path: emulator-gpu-host.png
